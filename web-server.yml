---
- name: "Installing web server"
  hosts: all
  become: true
  pre_tasks:
  - name: "Update RedHat"
    yum:
      update_only: yes
      update_cache: yes
    when: ansible_distribution == "RedHat"
    changed_when: false

  - name: "Update Ubuntu"
    apt:
      upgrade: dist
      update_cache: yes
    when: ansible_distribution == "Ubuntu"
    changed_when: false


#-------------Installation of apache web server on CentOS------------------#
- name: "Installing apache web server on centos"
  hosts: web01
  gather_facts: no
  become: true
  tasks:
  - name: "installing httpd on centos"
    yum:
      name:
        - httpd
        - firewalld
      state: present
    changed_when: false
  - name: "Copy default_site.html in .."
    copy:
      src: files/default_site.html
      dest: /var/www/html/index.html
      owner: root
      group: root
      mode: 0644
    changed_when: false
  - name: "Check httpd state service"
    service:
      name: "{{ item }}"
      state: started
      enabled: yes
    with_items:
      - httpd
      - firewalld
    changed_when: false
  - name: "Allows http port"
    firewalld:
      permanent: yes
      port: 80/tcp
      state: enabled
    changed_when: false

#-------------Installation of apache web server on Ubuntu------------------#
- name: "Installing apache web server on ubuntu"
  hosts: bdd01
  gather_facts: no
  become: true
  tasks:
  - name: "installing apache2 on ubuntu"
    apt:
      name:
        - apache2
        - firewalld
      state: present
    changed_when: false
  - name: "Copy default_site.html in .."
    copy:
      src: files/default_site.html
      dest: /var/www/html/index.html
      owner: root
      group: root
      mode: 0644
    changed_when: false
  - name: "Check apache2, firewalld state"
    service:
      name: "{{ item }}"
      state: started
      enabled: yes
    with_items:
      - apache2
      - firewalld
    changed_when: false
  - name: "Allow apache ports"
    firewalld:
      permanent: yes
      port: 80/tcp
      state: enabled
    changed_when: false
#--------------------Installing package on CentOS and Ubuntu------------------#
- name: "Using package modules to install unzip"
  hosts: workstation
  become: true
  gather_facts: no
  tags: always
  tasks:
  - name: "Installing unzip"
    package:
      name: unzip
      state: present
  - name: "Installing Terraform "
    unarchive:
      src: https://releases.hashicorp.com/terraform/1.0.0/terraform_1.0.0_linux_amd64.zip
      dest: /usr/local/bin/
      remote_src: yes
      mode: 0755
      owner: root
      group: root
  - name: "Change default email to owner email on RedHat"
    lineinfile:
      path: /etc/httpd/conf/httpd.conf
      regex: '^ServerAdmin'
      line: ServerAdmin gbiliza64@gmail.com
    when: ansible_distribution == "RedHat"
    register: httpd
  - name: "Restart apache2 service"
    service:
      name: httpd
      state: restarted
    when: ansible_distribution == "RedHat"

  - name: "Change default email to owner email on Ubuntu"
    lineinfile:
      path: /etc/apache2/sites-enabled/000-default.conf
      regex: '^ServerAdmin'
      line: ServerAdmin gbiliza64@gmail.com
    when: ansible_distribution == "Ubuntu"
    register: apache2
  - name: "Restart apache2 service"
    service:
      name: apache2
      state: restarted
    when: ansible_distribution == "Ubuntu"

#----------------------------Create user ----------------------------#
  - name: "Create user on system"
    user:
      name: gbiliza
      comment: "Houlouwolo Pierre"
      shell: /bin/bash
      groups: root
      append: yes
#-------------------Add users in sudoers group----------------------#
  - name: "Ajout de l'utilisateur dans le group sudoers"
    copy:
      src: sudoer_gbiliza
      dest: /etc/sudoers.d/gbiliza
      owner: root
      group: root
#---------------------Add user ssh key ----------------------------#
  - name: "Add ssh key for user gbigbi"
    authorized_key:
      user: gbiliza
      state: present
      key: "{{ lookup('file', '/home/goshit/.ssh/gitlabkey.pub') }}"
